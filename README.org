#+title: Jupyter Notebook Docker Image

* Instructions
The docker image can either be pulled from the GitHub container registry, or built locally after cloning this repository.
** Pulling from GHCR
The docker image can be pulled GHCR using the following command.
#+begin_src bash
  docker pull ghcr.io/lucas-kelley/ece-c147-jupyter:latest
#+end_src

** Build locally
It can also be built locally (if that's more your speed) from within the repository directory using the following command.
#+begin_src bash
  docker build -f Dockerfile --tag [IMAGE_NAME] .
#+end_src

** Usage
After either building or pulling the docker image to run a Jupyter notebook and access it from your local machine I have outlined the following steps.
1) Run the docker image with the directory where the notebook is located mounted to =/notebook= within the container and open the port =8888= into the container.
   
   e.g.
   #+begin_src bash
     docker run --rm -itdp 8888:8888 --name '[CONTAINER_NAME]' -v [DIR_PATH]:/notebook [IMAGE_NAME] '[PASSWORD]'
   #+end_src
   Where:
   - =[CONTAINER_NAME]= is the name of your container
   - =[DIR_PATH]= is the path to the directory where the Jupyter notebook is located
   - =[IMAGE_NAME]= is the name of the docker image to run, which would be =ghcr.io/lucas-kelley/ece-c147-jupyter= if pulled.
   - =[PASSWORD]= is the password for the Jupyter notebook once it is running
2) Open the Jupyter notebook by navigating to the URL =localhost:8888= within your browser.
3) Enter the password where prompted as =[PASSWORD]=
4) To stop the Jupyter container run the following command within your terminal.
   #+begin_src bash
     docker stop '[CONTAINER_NAME]'
   #+end_src


* Dockerfile Overview
The Dockerfile base image is ubuntu:22.04 because why the fuck not.
#+begin_src docker :tangle "Dockerfile"
  FROM ubuntu:22.04
#+end_src

We then setup the timezone information to avoid being prompted when installing packages and install the packages.
#+begin_src docker :tangle "Dockerfile"
  RUN ln -snf /usr/share/zoneinfo/$CONTAINER_TIMEZONE /etc/localtime && echo $CONTAINER_TIMEZONE > /etc/timezone
  RUN apt update && apt install -y python3 python3-pip pandoc texlive-xetex
#+end_src

After that the requirements specified for ece c147 Jupyter notebooks are installed.
#+begin_src docker :tangle "Dockerfile"
  COPY requirements.txt /src/pip_reqs/
  RUN python3 -m pip install -r /src/pip_reqs/requirements.txt
#+end_src

Then we add the default user =anon= and copy the entrypoint script into the image.
#+begin_src docker :tangle "Dockerfile"
  RUN useradd -ms /bin/bash anon
  COPY --chown=anon entrypoint.sh /run/
  USER anon
#+end_src

Finally the working directory gets set as =/notebook= and the entrypoint is set as the =entrypoint.sh= script.
#+begin_src docker :tangle "Dockerfile"
  WORKDIR /notebook
  ENTRYPOINT ["/run/entrypoint.sh"]
#+end_src
